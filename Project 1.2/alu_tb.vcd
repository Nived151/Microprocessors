$date
	Tue Feb 14 04:58:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! Zero $end
$var wire 1 " V $end
$var wire 1 # N $end
$var wire 8 $ F [7:0] $end
$var wire 1 % D $end
$var wire 1 & C $end
$var reg 8 ' A [7:0] $end
$var reg 8 ( B [7:0] $end
$var reg 4 ) FS [3:0] $end
$var reg 8 * IN [7:0] $end
$var reg 8 + INK [7:0] $end
$var reg 3 , SH [2:0] $end
$var integer 32 - i [31:0] $end
$scope module uut $end
$var wire 8 . A [7:0] $end
$var wire 8 / B [7:0] $end
$var wire 4 0 FS [3:0] $end
$var wire 8 1 IN [7:0] $end
$var wire 8 2 INK [7:0] $end
$var wire 3 3 SH [2:0] $end
$var reg 1 & C $end
$var reg 1 % D $end
$var reg 8 4 F [7:0] $end
$var reg 1 # N $end
$var reg 1 " V $end
$var reg 1 ! Zero $end
$var reg 8 5 overflowregister [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 5
b11101 4
b1 3
bx 2
bx 1
b1 0
b1110 /
b1111 .
b0 -
b1 ,
bx +
bx *
b1 )
b1110 (
b1111 '
0&
x%
b11101 $
0#
0"
0!
$end
#10000
b1110 $
b1110 4
b10 )
b10 0
b1 -
#20000
1!
b0 $
b0 4
b11 )
b11 0
b10 -
#30000
0!
b1110 $
b1110 4
b100 )
b100 0
b11 -
#40000
b1111 $
b1111 4
b101 )
b101 0
b100 -
#50000
b11110010 5
b1 $
b1 4
b110 )
b110 0
b101 -
#60000
b11110 $
b11110 4
b111 )
b111 0
b110 -
#70000
b1110 $
b1110 4
b1000 )
b1000 0
b111 -
#80000
b1 $
b1 4
b1001 )
b1001 0
b1000 -
#90000
b11101 $
b11101 4
b1010 )
b1010 0
b1001 -
#100000
1!
b0 $
b0 4
b1011 )
b1011 0
b1010 -
#110000
b1100 )
b1100 0
b1011 -
#120000
0!
b1111 $
b1111 4
b1101 )
b1101 0
b1100 -
#130000
1!
b0 $
b0 4
b1110 )
b1110 0
b1101 -
#140000
b1111 )
b1111 0
b1110 -
#150000
b0 )
b0 0
b1111 -
#160000
b1010 (
b1010 /
b11110110 '
b11110110 .
b10000 -
